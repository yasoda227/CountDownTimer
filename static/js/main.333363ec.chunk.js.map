{"version":3,"sources":["Components/Timer/Timer.js","Components/DateInput/DateInput.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","day","hour","minute","second","className","DateInput","getDate","setDateString","type","onChange","placeholder","onClick","App","props","ev","console","log","target","value","setState","input","dateString","state","x","setInterval","curr_time","Date","getTime","diff_time","days","Math","floor","hours","minutes","seconds","errorMessage","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAkDeA,MAlBf,YAA0C,IAA1BC,EAAyB,EAAzBA,IAAIC,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,OAC5B,OACI,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,uDACA,8CACA,+BACE,6BAAI,yCAAUJ,EAAV,YACJ,6BAAI,yCAAUC,EAAV,aACJ,6BAAI,yCAAUC,EAAV,YACJ,6BAAI,yCAAUC,EAAV,qB,MC9BHE,MATf,YAA6C,IAAzBC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,cACxB,OACI,sBAAKH,UAAU,mBAAf,UACA,uBAAOI,KAAK,OAAOC,SAAUH,EAASI,YAAY,8CAClD,wBAASC,QAASJ,EAAlB,wBCYaK,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAaVP,QAAS,SAACQ,GACPC,QAAQC,IAAIF,EAAGG,OAAOC,OACtB,EAAKC,SAAS,CACVC,MAAMN,EAAGG,OAAOC,SAjBL,EAoBlBX,cAAc,WACV,EAAKY,SAAS,CACVE,WAAY,EAAKC,MAAMF,SAtBb,EA0BlBG,EAAIC,aAAa,WACb,IAAMC,GAAY,IAAIC,MAAOC,UAGvBC,EADc,IAAIF,KAAK,EAAKJ,MAAMD,YAAYM,UAClBF,EAC9BI,EAAOC,KAAKC,MAAMH,EAAU,OAC5BI,EAAQF,KAAKC,MAAOH,EAAS,MAAV,MACnBK,EAAUH,KAAKC,MAAOH,EAAS,KAAV,KACrBM,EAAUJ,KAAKC,MAAOH,EAAS,IAAc,KAEjD,EAAKT,SAAS,CACVnB,IAAI6B,EACJ5B,KAAK+B,EACL9B,OAAO+B,EACP9B,OAAO+B,EACPN,UAAWA,MAGjB,KA1CE,EAAKN,MAAO,CACRtB,IAAK,EACLC,KAAK,EACLC,OAAO,EACPC,OAAO,EACPyB,UAAU,EACVR,MAAM,GACNC,WAAW,GACXc,aAAa,IAVH,E,0CA8Cd,WACA,OACI,sBAAK/B,UAAU,WAAf,UACiC,KAA1BgC,KAAKd,MAAMD,WACd,cAAC,EAAD,CAAOrB,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IACxCiC,KAAKd,MAAMM,UAAY,EACtB,oBAAIxB,UAAU,gBAAd,oDACA,cAAC,EAAD,CAAOJ,IAAKoC,KAAKd,MAAMtB,IAAKC,KAAMmC,KAAKd,MAAMrB,KAAMC,OAAQkC,KAAKd,MAAMpB,OAAQC,OAAQiC,KAAKd,MAAMnB,SAKrG,cAAC,EAAD,CAAWG,QAAS8B,KAAK9B,QAASC,cAAe6B,KAAK7B,uB,GA5DrC8B,aCPlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.333363ec.chunk.js","sourcesContent":["// import React, { Component } from 'react';\r\n// import './Timer.css';\r\n// class Timer extends Component {\r\n\r\n//   render() {\r\n//     // const { daysLeft, hoursLeft, minutesLeft, secondsLeft } = this.state;\r\n//     return (\r\n//       <div className='timer-container'>\r\n//         <p id='done'></p>\r\n//         <ul>\r\n//           <li>\r\n//             <span id='days'>{this.state.daysLeft}</span> Days\r\n//           </li>\r\n//           <li>\r\n//             <span id='hours'>{this.state.hoursLeft}</span> Hours\r\n//           </li>\r\n//           <li>\r\n//             <span id='minutes'>{this.state.minutesLeft}</span> Minutes\r\n//           </li>\r\n//           <li>\r\n//             <span id='seconds'>{this.state.secondsLeft}</span> Seconds\r\n//           </li>\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Timer;\r\nimport React from 'react';\r\nimport './Timer.css';\r\n\r\nfunction Timer({day,hour,minute,second}) {\r\n    return (\r\n        <div className=\"timer-container\">\r\n          <div className=\"count-down-time\">\r\n            <h1>React Countdown Timer</h1>\r\n            <p>Timer ends on</p>\r\n            <ul>\r\n              <li><span>{`${day}Days`}</span></li>\r\n              <li><span>{`${hour}Hours`}</span></li>\r\n              <li><span>{`${minute}Mins`}</span></li>\r\n              <li><span>{`${second}Secs`}</span></li>\r\n            </ul>\r\n                \r\n          </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport './DateInput.css';\r\n\r\nfunction DateInput({getDate,setDateString}) {\r\n    return (\r\n        <div className=\"date-input-field\">\r\n        <input type=\"text\" onChange={getDate} placeholder=\"Enter the date like: 1 jan 2022 20:45:56 \"/>\r\n        <button  onClick={setDateString}>Submit</button>                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateInput;","// import Timer from './Components/Timer/Timer';\n// import DateInput from './Components/DateInput/DateInput';\n// function App() {\n//   return (\n//     <div className='app-container'>\n//       <h1 className='app-title'>React Countdown Timer</h1>\n//       <p>Time Left</p>\n//       <Timer />\n//       <DateInput/>\n      \n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { Component } from 'react';\nimport './App.css'\nimport Timer from './Components/Timer/Timer';\nimport DateInput from './Components/DateInput/DateInput';\nexport default class App extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state ={\n            day: 0,\n            hour:0,\n            minute:0,\n            second:0,\n            diff_time:0,\n            input:'',\n            dateString:'',\n            errorMessage:''\n        } \n        \n    }\n    getDate =(ev)=>{\n       console.log(ev.target.value);\n       this.setState({\n           input:ev.target.value\n       })\n    }\n    setDateString=()=>{\n        this.setState({\n            dateString: this.state.input\n        })      \n\n    }\n    x = setInterval( ()=>{\n        const curr_time = new Date().getTime();\n\n        var countDownDate = new Date(this.state.dateString).getTime();\n        const diff_time = countDownDate - curr_time;\n        var days = Math.floor(diff_time/(1000*60*60*24));\n        var hours = Math.floor((diff_time %(1000*60*60*24))/(1000*60*60));\n        var minutes = Math.floor((diff_time %(1000*60*60))/(1000*60));\n        var seconds = Math.floor((diff_time %(1000*60))/(1000));\n          \n        this.setState({\n            day:days,\n            hour:hours,\n            minute:minutes,\n            second:seconds,\n            diff_time: diff_time\n        })\n\n    },1000)\n  \n        render() {\n        return (\n            <div className=\"main-app\">\n                { (this.state.dateString === '' )? \n                <Timer day={0} hour={0} minute={0} second={0}/>\n                : (this.state.diff_time < 0 ? \n                    <h1 className=\"error-message\">Please Choose a Present or Future Date</h1> :\n                    <Timer day={this.state.day} hour={this.state.hour} minute={this.state.minute} second={this.state.second}/>\n                ) \n\n            }\n            {/* print error message if date is not valid */}\n                <DateInput getDate={this.getDate} setDateString={this.setDateString} />\n            </div>\n        )\n    }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}